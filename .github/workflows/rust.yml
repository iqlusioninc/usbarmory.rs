# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on:
  pull_request: {}
  push:
    branches: develop

name: Rust

jobs:
  check:
    name: Check firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: armv7a-none-eabi
          toolchain: beta
          override: true

      - name: Run cargo check
        working-directory: ./firmware
        run: |
          cargo check

  host-check:
    name: Check host crates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo check
        working-directory: ./host
        run: |
          cargo check

# NOTE the `common` directory is currently empty so this is a no-op
# common-test:
#   name: Run tests on the host
#   strategy:
#     matrix:
#       toolchain:
#         - 1.40.0
#         - stable
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout sources
#       uses: actions/checkout@v2

#     - name: Install toolchain
#       uses: actions-rs/toolchain@v1
#       with:
#         toolchain: ${{ matrix.toolchain }}
#         override: true

#     - name: Cache cargo registry
#       uses: actions/cache@v1
#       with:
#         path: ~/.cargo/registry
#         key: ${{ runner.os }}-cargo-registry-${{ hashFiles('common/Cargo.lock') }}

#     - name: Cache cargo index
#       uses: actions/cache@v1
#       with:
#         path: ~/.cargo/git
#         key: ${{ runner.os }}-cargo-index-${{ hashFiles('common/Cargo.lock') }}

#     - name: Cache cargo build
#       uses: actions/cache@v1
#       with:
#         path: target
#         key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('common/Cargo.lock') }}

#     - name: Run cargo test
#       working-directory: ./common
#       env:
#         CARGO_INCREMENTAL: 0
#         RUSTFLAGS: -D warnings
#       run: |
#         cargo test --release

#     - name: Run cargo test
#       working-directory: ./common
#       env:
#         CARGO_INCREMENTAL: 0
#         RUSTFLAGS: -D warnings
#       run: |
#         cargo test

# XXX unfortunately, Ubuntu 18.04 ships with QEMU 2.11 which doesn't
# support the mcimx6ul-evk (i.MX6UL) machine
# target-test:
#   name: Run some firmware examples on the host using QEMU
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout sources
#       uses: actions/checkout@v2

#     - name: Install beta toolchain
#       uses: actions-rs/toolchain@v1
#       with:
#         target: armv7a-none-eabi
#         toolchain: beta
#         override: true

#     - name: Install QEMU
#       run: |
#         sudo apt update
#         sudo apt install qemu-system-arm

#     - name: Install flip-lld
#       run: |
#         cargo install --git https://github.com/japaric/flip-lld

#     - name: Run examples
#       working-directory: ./firmware
#       run: |
#         cargo run --example qemu-hello --release

  # test that all our examples link
  it_links:
    name: Check that all examples link in dev and release mode
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: armv7a-none-eabi
          toolchain: beta
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('firmware/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('firmware/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: firmware/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('firmware/Cargo.lock') }}

      # - name: Cache cargo installs
      #   id: cache-cargo-bin
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.cargo/bin
      #     key: ${{ runner.os }}-cargo-bin-${{ hashFiles('dev-dependencies.txt') }}

      # - name: Install dev-dependencies
      #   if: steps.cache-cargo-bin.outputs.cache-hit != 'true'
      #   run: |
      #     which flip-lld || cargo install `cat dev-dependencies.txt`

      # TODO cache in dev-dependencies.txt when available on crates.io
      - name: Install flip-lld
        run: |
          cargo install --git https://github.com/japaric/flip-lld --rev b1028b9b140150379ecdcea2c07580af933378e9

      - name: Build examples using the dev profile
        working-directory: ./firmware
        run: |
          cargo build --examples

      - name: Build examples using the release profile
        working-directory: ./firmware
        run: |
          cargo build --examples --release
          cargo build --bins --release

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        working-directory: ./firmware
        run: |
          cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: armv7a-none-eabi
          toolchain: beta
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        working-directory: ./firmware
        run: |
          cargo clippy -- -D warnings
