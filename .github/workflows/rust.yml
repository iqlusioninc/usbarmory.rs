# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on:
  pull_request: {}
  push:
    branches: develop

name: Rust

jobs:
  check:
    name: Check firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache cargo installs
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('dev-dependencies.txt') }}

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rust-src # needed by cargo-xbuild
          toolchain: nightly
          override: true

      - name: Install dev-dependencies
        run: |
          cargo install `cat dev-dependencies.txt`

      - name: Run cargo xcheck
        working-directory: ./firmware
        run: |
          cargo xcheck

# NOTE the `common` directory is currently empty so this is a no-op
# host-test:
#   name: Run tests on the host
#   strategy:
#     matrix:
#       toolchain:
#         - 1.40.0
#         - stable
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout sources
#       uses: actions/checkout@v2

#     - name: Cache cargo registry
#       uses: actions/cache@v1
#       with:
#         path: ~/.cargo/registry
#         key: ${{ runner.os }}-cargo-registry-${{ hashFiles('common/Cargo.lock') }}

#     - name: Cache cargo index
#       uses: actions/cache@v1
#       with:
#         path: ~/.cargo/git
#         key: ${{ runner.os }}-cargo-index-${{ hashFiles('common/Cargo.lock') }}

#     - name: Cache cargo build
#       uses: actions/cache@v1
#       with:
#         path: target
#         key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('common/Cargo.lock') }}

#     - name: Install toolchain
#       uses: actions-rs/toolchain@v1
#       with:
#         toolchain: ${{ matrix.toolchain }}
#         override: true

#     - name: Run cargo test
#       working-directory: ./common
#       env:
#         CARGO_INCREMENTAL: 0
#         RUSTFLAGS: -D warnings
#       run: |
#         cargo test --release

#     - name: Run cargo test
#       working-directory: ./common
#       env:
#         CARGO_INCREMENTAL: 0
#         RUSTFLAGS: -D warnings
#       run: |
#         cargo test

  target-test:
    name: Run some firmware examples on the host using QEMU
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache cargo installs
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('dev-dependencies.txt') }}

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rust-src # needed by cargo-xbuild
          toolchain: nightly
          override: true

      - name: Install QEMU
        run: |
          sudo apt update
          sudo apt install qemu-system-arm

      - name: Install dev-dependencies
        run: |
          cargo install `cat dev-dependencies.txt`

      - name: Run examples
        working-directory: ./firmware/usbarmory
        env:
          RUST_TARGET_PATH: $GITHUB_WORKSPACE/firmware
        run: |
          cargo xrun --example qemu-hello --release

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache cargo installs
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('dev-dependencies.txt') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        working-directory: ./firmware
        run: |
          cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache cargo installs
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('dev-dependencies.txt') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rust-src # needed by cargo-xbuild
          toolchain: nightly
          override: true

      - name: Install dev-dependencies
        run: |
          cargo install `cat dev-dependencies.txt`

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        working-directory: ./firmware
        run: |
          cargo xclippy -- -D warnings
